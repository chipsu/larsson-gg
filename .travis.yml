sudo: required
dist: trusty
language: node_js
node_js:
- 8.9.4
before_script:
- npm install
script:
- npm run build
after_success:
- if [[ " master stage " =~ .*\ $TRAVIS_BRANCH\ .* ]]; then
  REPO_ORG=$(echo $TRAVIS_REPO_SLUG | cut -d "/" -f 1);
  REPO_NAME=$(echo $TRAVIS_REPO_SLUG | cut -d "/" -f 2);
  COMPOSE_FILE=docker-compose.yml;
  RANCHER_STACK=$TRAVIS_REPO_SLUG;
  if [[ -f docker-compose-$TRAVIS_BRANCH.yml ]]; then
  COMPOSE_FILE=docker-compose-$TRAVIS_BRANCH.yml;
  RANCHER_STACK=$RANCHER_STACK-$TRAVIS_BRANCH;
  fi;
  docker build -t $DOCKER_USERNAME/$REPO_NAME .;
  docker tag $DOCKER_USERNAME/$REPO_NAME $DOCKER_USERNAME/$REPO_NAME:$(git rev-parse --short HEAD);
  docker tag $DOCKER_USERNAME/$REPO_NAME $DOCKER_USERNAME/$REPO_NAME:$TRAVIS_BRANCH;
  docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
  docker push $DOCKER_USERNAME/$REPO_NAME;
  wget -qO- https://github.com/rancher/rancher-compose/releases/download/v0.12.5/rancher-compose-linux-amd64-v0.12.5.tar.xz | tar -xvJ --strip=2;
  ./rancher-compose -f $COMPOSE_FILE -p $RANCHER_STACK up --pull --upgrade -d;
  echo todo, tests or rancher-compose up -p $RANCHER_STACK -d --rollback;
  echo todo if ok, rancher-compose up -p $RANCHER_STACK -d --confirm-upgrade;
  fi
env:
  global:
  - secure: a/s0KX766xmIwLQqJ3ppNs/W9C5PiHGsT6BJto7h/k5xyD5YWV7Xf+Ma3oIAueJnXrEOueC+A5Qs9hY6wfjvqLYrN7zcpUr6NPgqc7BAJ6P3PINPeZ2reH+ZdKJIo0SWJLniur2c85k9NwnfD4uoUAU5ce/PybZ0rFwgd6wemfls0HZWpoddGcmxM+llAt9SoQWTifEgFQ9iTJxirxS52upUUVgtK+QohMNL6E2gg38dyBbU1M5PEWu+RATK4SxyqPWpDryDaXB53MTiGeuFINiHfPU+Oo1BKpAZgk3MIQsrkk6Bbo3eEjxFpUyoN5MbXCnOJ0J8cUqR0m1hnShgmJbsMtE9rih6UraWe/4u+BvdDg33OgMBSCDaYkDP6sJz/tLSxmMVcr4SMy3lVn9EKb8fA0PWYlSWiB8bS8aP3OtWQr+8rcRE9L1NchR7gnJB3tIwUWlZbSO4IiWgcWeJEVM3olmVBPk9hFO+C9h8uJFcRs5W/maHb+jWB5h9PORg8MnmIZVPpZjCkBlf2EsTl1cSlT2V0GJFW/v/1vu/8+p6vGNZ5rbvEnmwRt1SfmtMbGdx2bWcjkK3nwtFio9QwVhC1thdopwe5ZzHHQNpr7Zv+oMkzU+KWNitpVQQHrGIT2AjNMZ6y7vs8rElpI8H+j4eMOv7Q0UdvexdMYZD/Vs=
  - secure: IqkmaKTLdnClQ5I1T5aNcCRbXCFyO0P7j2wMoX3Mlo41v6t78X8PJqf9lEJCcm7PSfwYAQ9h/RRdBqjLI8PpkYIl5XVet4qEjfl3/fuefXZdeGi+8VgE1U7Pa1R9kmkN+06h6UKUQrP8MsFVMT6o2VYPSkEWlg/JgTw+18XTfnXDuavkI0Z/xX96U0d5oUawc57UYEtNgd+WIdXCId4sWibWzxK/laQExjWY9868Gnu0wZXwOQO252CFbJj5qKSYEor6df/3Jg0wJ6YDj4MJ+SCANlyNQrQUm3FncauNx9QlC7DXSSoh9pzRdEwXd3XaMb/a9d7HfcMz6PxnxJaadrVVift89iqS8EFAq8cyCpCj8cv3OpM5x5CGC0SU/0iP+HZk0Ulf+3fh/LXojSm2HcWrUvFqYCvVpU1fAWNVQ1M7paMy8QnAwADw4336rXckzztyM5vlWm/QSR5ACXBda0q7kxwHu8csifPBm9piJ+tvzF1ICO5FU+6QyVBoMUNMuJlYrCssRJb0kF76KXZUMZQqNGAnk1WoYyzLSWNqoJI5/I9fECkmluQWOjb9/qQMyfQPSiO/hfyEEI16Wpi65ZpXkNpxEQc3Hioc08EDtkePoGE8RGw+p52c3EZJt7/irbBzKGdldUTSid+kgw0rt/qp51DYy/Hk67JkE3Ze45w=
  - secure: rRZ86bM10/Ob63I1K0njwSuvZVFUjqvPhZdRJPhfjk0+hjfrfRQAsmc7w0UBy4RgRYhidu1peBLOSwoGj02BObAR0K5ZdT9Bh+eJ5sBYvQA2X4radD0RQWkQtYQCY5VNH7GS3YvrPIbIoMtByJwdxs96yov5k1paG78EEcPgkw87BI7TbkxfWIYFDvuNcADZPkuUQpMcXGLhGxGaRYuYrYACnEBDp4J3N0h1TiVmoWQh2BcRpRBzunvT0QbCRDyrsonbNVSgGYJcbt0bKaJg9K1Nlctc9/sH2G/1mRa4ZFzjmWUR6CUOGcOQgBQt2iE+ZtzMn/CrnnW6MBWIakw7cBxE6OJIWXFLHc+zb225zoW+iy8i+5NTsR8u5l6WTaYKnqoNV8GpcQdt0TBeAZBEVkj93zDrV/1R1HSIhGFEy3/To5R9EA5IbKV9ocNmjl7z/pOhwA4pn3RdPwH3qUu7LBMsBfgm3dh6zliHq5R6r7g7HYYSTAZZAyIXr/3znJg6P4FhH0HbM5bnXdY1l3hm044FdjlwYjYsWHIJH1LqMp6a0sLcb7MdEgYZBIwRZETG2gjEuxat0U4w/4au6i1p1wwIy94RNwS/NzK/na7xNPlb3TTEY17akdQjqxdUdUz8/c11G6hZlJIMrLYTYkIX6hVXZQhf7q7FtkKhX2ggMqQ=
  - secure: DpIzOt8RPmZpRpGxoJG7g/nDkFvsQyGrb/IDkiOomvirB2Tg3BtAggzusd7Du+1hOTZAEui5rpvnir71wuz85bxl9BeA90tfNG65cIrmvK+0WcQ8kM2qu7yM2Plmk7f8gMp4mB2hpvHTzamga9x85Ewz+mbwgkMHF4aE4E38/lL2Dk+jb/6k02EC5QRcc37C46Q1tPw6MQUk0CafUsqWWFt1yKEG5F+bx7m7LZxA759L2mSjeanP1EuEwQ7oe9tMfyOhPCNa+BAzcuIkiNvK4pX1KawGOKXcSAr4Og8zjxx+ILP2WG2RfTBvEoQJtttB/9PKjgqeF+D+4uKEEkxeDfgXPNiPKuK4uFpv6WkA005WJ/3iVtbDqmVARtlJY7kI+XxMeyrN6qU5hqrYuLoJ3s2O1m9cDqqdQdh49ILYT+WoW+H1cAoPladZCD+Kyoetu0/3Ao4btGxE0mRUTAei0rXrJlJoYW6PE3C8fBtD04+7pwnUQnBhT0NHyyC4qhUpX7P8Thuqqv+f+9Tj/s6pVcOQnmrp/LBsnwgf5yP+Q3hrVFpLhFHIVcivTdoVrcYxjY9OedGf1NoBsUkDlWn3EA9pohTeK2nd/zFnwo0IuF4ihlttPe++A4XH1QOQfHuTjb5lkZ2nRxTHBZKNc1g4IgtAj2Q6TToCz3zw9U039CA=
  - secure: jQHJ6hY/33FLGDlApNXfryU2ozECdsg8FqYMGry4nREbYSqBsN8U9H4wP1z0b5w9GkJhaNq7znhPKMqiSoFnhwy39d6kxabqSdDRFh2YrcgZ9vqu41UIpHhsWc616abuY0Tc4eY+JzOyHYwgj6935EuqcX1KPragHy4BylmYHiUxMD8hXDM1GbFgxUXEE2/EBYKtMvYDR1lE43aQwPFPn7XtK0GrxtMZzzVfe+eTxpl/epzFfbC7YV/6Jwc+AoPTIzHbT0LQiAv/1jUeHr9jHYiGakGNm2/yLkKsq3l+uD/cfRV3Za/cz+UCxlC7QfoM3ieMdmsAxM+zdsqDx3BrRmFDsg1diYnbDKcFdI53qYyru4NDFaFnSuAKyDfyGyGvvBgqRFOOyvSNofd2Yi+hjsRlSTfid4HRKjuBwykoAvsJikl9CoI6HKrzHkowZ4UGKCx9Y7lJBXdmCy+4/2p4Mo2izMkVUxIFuIs22PEm/hGVThgcBnqeSW/JqGIRfVFE5YtaEHgpKS4RTcCdIzzZukpYeXK4edbNYm0q7kLD/dwdchLFaUeCTGcQKKCK3OnUZLOYZSLwq+2VvmqDTZ4yLv7SxsrYWB0AoWDPhotphn2PPUNQDE3LLkTVPJ3xW11gx4rpHvngJ4WKirzYPQo+zccNNnKOjc9zJssskLWOd0s=
